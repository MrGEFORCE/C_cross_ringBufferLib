cmake_minimum_required(VERSION 3.25)
project(C_x86cross_ringBufferLib C)

set(CMAKE_BUILD_TYPE DEBUG)

include_directories("./")

if(CMAKE_BUILD_TYPE STREQUAL DEBUG)
file(GLOB SRC main.c)
add_executable(${CMAKE_PROJECT_NAME} ${SRC})
IF (CMAKE_SYSTEM_NAME MATCHES "Linux")
    target_link_libraries(${CMAKE_PROJECT_NAME} PRIVATE ${CMAKE_SOURCE_DIR}/build/libC_x86cross_ringBufferLib.so)
    MESSAGE(STATUS "current platform: Linux ") 
ELSEIF (CMAKE_SYSTEM_NAME MATCHES "Windows")
target_link_libraries(${CMAKE_PROJECT_NAME} PRIVATE ${CMAKE_SOURCE_DIR}/build/libC_x86cross_ringBufferLib.dll)
    MESSAGE(STATUS "current platform: Windows") 
ELSEIF (CMAKE_SYSTEM_NAME MATCHES "Darwin")
    target_link_libraries(${CMAKE_PROJECT_NAME} PRIVATE ${CMAKE_SOURCE_DIR}/build/libC_x86cross_ringBufferLib.dylib)
    MESSAGE(STATUS "current platform: Mac OS X")
ELSE ()
    target_link_libraries(${CMAKE_PROJECT_NAME} PRIVATE ${CMAKE_SOURCE_DIR}/build/libC_x86cross_ringBufferLib.so)
    MESSAGE(STATUS "other platform: ${CMAKE_SYSTEM_NAME}") 
ENDIF (CMAKE_SYSTEM_NAME MATCHES "Linux") 
else()
file(GLOB SRC *.c)
list(REMOVE_ITEM SRC ${CMAKE_SOURCE_DIR}/main.c)
add_library(${CMAKE_PROJECT_NAME} SHARED ${SRC})
endif()
